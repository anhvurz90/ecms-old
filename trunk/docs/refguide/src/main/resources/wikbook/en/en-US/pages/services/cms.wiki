CmsService is used for working with nodes. In this service there are many functions which allow you to add, edit, move node.

Package org.exoplatform.services.cms.CmsService;

|| *Method* || *Return* || *Prototype* || *Desription* ||
| storeNode | String | storeNode(String workspace, String nodetypeName, String storePath, Map inputProperties,String repository) throws Exception; | Returns path to saved node{example}{example}@param workspace: name of workspace{example}{example}@param nodetypeName: NodeType's name{example}{example}@param storePath: Path to store node{example}{example}@param inputProperties: Map of node's property including (property name, value){example}{example}@param repository: Repository's name{example}{example}@throws Exception: throws exception |
| storeNode | String | storeNode(String nodetypeName, Node storeHomeNode, Map inputProperties, boolean isAddNew,String repository) throws Exception; | Returns path to saved node{example}{example}@param nodetypeName: NodeType's name{example}{example}@param storeHomeNode: Parent node, where node is stored{example}{example}@param inputProperties: Map of node's property including (property name, value){example}{example}@param isAddNew: flag to decide whether this situation is adding node or updating node{example}{example}@param repository: Repository's name{example}{example}@throws Exception: throws exception |
| storeEditedNode | String | storeEditedNode(String nodetypeName, Node storeNode, Map inputProperties, boolean isAddNew,String repository) throws Exception; | Returns path to saved node{example}{example}@param nodetypeName: NodeType's name{example}{example}@param storeNode: Node is stored{example}{example}@param inputProperties: Map of node's property including (property name, value){example}{example}@param isAddNew: flag to decide whether this situation is adding node or updating node{example}{example}@param repository: Repository's name{example}{example}@throws Exception: throws exception |
| storeNodeByUUID | String | storeNodeByUUID(String nodetypeName, Node storeNode, Map inputProperties, boolean isAddNew,String repository) throws Exception; |  Returns return UUID of saved node{example}{example}@param nodetypeName: NodeType's name{example}{example}@param storeNode: Node is stored{example}{example}@param inputProperties: Map of node's property including (property name, value){example}{example}@param isAddNew: flag to decide whether this situation is adding node or updating node{example}{example}@param repository: Repository's name{example}{example}@throws Exception: throws exception |
| moveNode | void | moveNode(String nodePath, String srcWorkspace, String destWorkspace, String destPath, String repository) | @param nodePath: Path to node in source workspace{example}{example}@param srcWorkspace: Source workspace name{example}{example}@param destWorkspace: Destination of workspace name{example}{example}@param destPath: Destination of node path{example}{example}@param repository: Repository's name{example}{example}@throws Exception: throws exception |
