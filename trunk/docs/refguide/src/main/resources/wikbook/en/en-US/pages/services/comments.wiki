CommentsService is used to work with *commenting* node. In this service, there are some functions which allow you to add, edit, delete, get comments.

Package org.exoplatform.services.cms.comments.CommentsService;

|| *Method* || *Return* || *Prototype* || *Desription* ||
| *addComment* | {{void}} | {{addComment(Node document, String commentor, String email, String site, String comment, String language) throws Exception}} | Commenting the document is specified by the node by giving the commentor, email, site, comment and language params{example}{example}@param document: The node document is commented{example}{example}@param commentor: The name of current user{example}{example}@param email: The email of current user{example}{example}@param site: The site of current user{example}{example}@param comment: The content of the comment{example}{example}@param language: The language of this document is commented{example}{example}@throws Exception: throws exception |
| *updateComment* | {{void}} | {{updateComment(Node commentNode, String newComment) throws Exception}} | Update comment for document: set new comment for node{example}{example}@param commentNode: The node document is commented{example}{example}@param newComment: The comment's content{example}{example}{example}{example}@throws Exception: throws exception |
| *deleteComment* | {{void}} | {{deleteComment(Node commentNode) throws Exception}} | Delete comment of document by given comment node{example}{example}@param commentNode: The node document is commented{example}{example}@throws Exception: throws exception |
| *getComments* | {{List<Node>}} | {{getComments(Node document, String language)}} | Gets all comments from the specified node{example}{example}@param commentNode: The node document is commented{example}{example}@param language: The name of language{example}{example}@throws Exception: throws exception |

