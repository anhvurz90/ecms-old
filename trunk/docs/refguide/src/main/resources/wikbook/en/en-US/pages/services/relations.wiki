This service is used to manage document relationship

Package org.exoplatform.services.cms.relations.RelationsService;

|| *Method* || *Return* || *Prototype* || *Description* ||
| *{{hasRelations}}* | {{boolean}} | {{hasRelations(Node node) throws Exception}} | Returns true is the given node has relation {example}{example} @param node:              Specify the node wants to check relation {example}{example} @see                     Node {example}{example} @throws Exception |
| *{{getRelations}}* | {{List<Node>}} | {{getRelations(Node node, String repository, SessionProvider provider) throws Exception}} | Gets all node that has relation to the given node {example}{example} @param node:              Specify the node wants to get all node relative to it {example}{example} @param repository:        The name of repository {example}{example} @param provider:          The SessionProvider object is used to managed Sessions {example}{example} @see                     Node {example}{example} @see                     SessionProvider {example}{example} @throws Exception |
| *{{removeRelation}}* | {{void}} | {{removeRelation(Node node, String relationPath, String repository) throws Exception}} | Removes the relation to the given node by specified the relationPath params {example}{example} @param node:              Specify the node wants to remove a relation {example}{example} @param relationPath:     The path of relation {example}{example} @param repository:       The name of repository {example}{example} @see                     Node {example}{example} @throws Exception |
| *{{addRelation}}* | {{void}} | {{addRelation(Node node, String relationPath, String workspaceName, String repository) throws Exception}} | Inserts a new relation is specified by relationPath params to the given node {example}{example} @param node:             Specify the node wants to insert a new relation {example}{example} @param relationPath:      The path of relation {example}{example} @param workspaceName:     The name of workspace {example}{example} @param repository:        The name of repository {example}{example} @see                     Node {example}{example} @throws Exception |
| *{{init}}* | {{void}} | {{init(String repository) throws Exception}} | Initial the root of relation node and its sub node {example}{example} @param repository:        The name of repository {example}{example} @throws Exception |

