This service is used to manage groovy script resources.

_Package org.exoplatform.services.cms.scripts.ScriptService_

|| *Method* || *Return* || *Prototype* || *Description* ||
| *{{getECMScriptHome}}* | {{Node}} | {{getECMScriptHome(String repository,SessionProvider provider) throws Exception}} | This method will get node for ECM Explorer Scripts by giving the following params {example}{example} @param repository:    The name of repository {example}{example} @param provider {example}{example} @see                 Node {example}{example} @see                 NodeHierarchyCreator {example}{example} @see                 SessionProvider {example}{example} @return              Node {example}{example} @throws Exception |
| *{{getCBScriptHome}}* | {{Node}} | {{getCBScriptHome(String repository,SessionProvider provider) throws Exception}} | This method will get node for Content Browser Scripts by giving the following params {example}{example} @param repository:    The name of reporsitory {example}{example} @param provider {example}{example} @see                 Node {example}{example} @see                 NodeHierarchyCreator {example}{example} @see                 SessionProvider {example}{example} @return              Node {example}{example} @throws Exception |
| *{{getECMActionScripts}}* | {{List<Node>}} | {{getECMActionScripts(String repository,SessionProvider provider) throws Exception}} | This method will get all node for ECM Action Scripts by giving the following params {example}{example} @param repository:    The name of reporsitory {example}{example} @param provider {example}{example} @see                 Node {example}{example} @see                 NodeHierarchyCreator {example}{example} @see                 SessionProvider {example}{example} @return              Node {example}{example} @throws Exception |
| *{{getECMInterceptorScripts}}* | {{List<Node>}} | {{getECMInterceptorScripts(String repository,SessionProvider provider) throws Exception}} | This method will get all node for ECM Interceptor Scripts by giving the following params {example}{example} @param repository:    The name of reporsitory {example}{example} @param provider {example}{example} @see                 Node {example}{example} @see                 NodeHierarchyCreator {example}{example} @see                 SessionProvider {example}{example} @return              List<Node> {example}{example} @throws Exception |
| *{{getECMWidgetScripts}}* | {{List<Node>}} | {{getECMWidgetScripts(String repository,SessionProvider provider) throws Exception}} | This method will get all node for ECM Widget Scripts by giving the following params {example}{example} @param repository    The name of reporsitory {example}{example} @param provider {example}{example} @see                 Node {example}{example} @see                 NodeHierarchyCreator {example}{example} @see                 SessionProvider {example}{example} @return              List<Node> {example}{example} @throws Exception |
| *{{getScript}}* | {{CmsScript}} | {{getScript(String scriptPath, String repository) throws Exception}} | This method will get script by giving the following params {example}{example} @param scriptPath:    The path of script {example}{example} @param repository:    The name of repository {example}{example} @see                 CmsScript {example}{example} @return              CmsScript {example}{example} @throws Exception |
| *{{getBaseScriptPath}}* | {{String}} | {{getBaseScriptPath() throws Exception}} | This method will get base path of script {example}{example} @see                 NodeHierarchyCreator {example}{example} @return              String@throws Exception |
| *{{addScript}}* | {{void}} | {{addScript(String name, String text, String repository,SessionProvider provider) throws Exception}} | This method will add script by giving the following params {example}{example} @param name:          The name of script {example}{example} @param text {example}{example} @param repository:    The name of repository {example}{example} @param provider {example}{example} @see                 InputStream {example}{example} @see                 Node {example}{example} @see                 SessionProvider {example}{example} @throws Exception |
| *{{removeScript}}* | {{void}} | {{removeScript(String scriptPath, String repository, SessionProvider provider) throws Exception}} | This method will remove script by giving the following params {example}{example} @param scriptPath:    The path of script {example}{example} @param repository:    The name of repository {example}{example}  @param provider {example}{example} @see                 Node {example}{example} @see                 SessionProvider {example}{example} @throws Exception |
| *{{getScriptNode}}* | {{Node}} | {{getScriptNode(String scriptName, String repository,SessionProvider provider) throws Exception}} | This method will get script node by giving the following params {example}{example} @param scriptName:    The name of script @param repository:    The name of repository {example}{example} @param provider:      SessionProvider {example}{example} @see                 Node {example}{example} @see                 SessionProvider {example}{example} @return              Node {example}{example} @throws Exception |
| *{{initRepo}}* | {{void}} | {{initRepo(String repository) throws Exception}} | This method will init repository by giving the following params {example}{example} @param repository:    The name of repository {example}{example} @see                 ManageableRepository {example}{example} @see                 ObservationManager {example}{example} @see                 Session {example}{example} @throws Exception |

